// Fibonacci Adaptation
// 1 again (1) defer (3 || N(1)<=N(2) || N(7)>99) 2#N(1),3,7;
// 2 again (2) defer (3 || N(2)<=N(1) || N(7)>99) 1#N(2),3,7;
// 3 defer (5) print(N(1)+N(2));
// 4 defer (5) print("1");
// 5 4,-3,7;
// 6 defer (4) 3;
// 7 7;
// 8 defer (N(7)<100) -1#N(1),-2#N(2),-7#100,-3;
// 9 defer (3 || 6) 1,3;

function one(){

  function toDefer(){
   add('two', N('one'));
   add('three');
   add('seven'); 
  }

  again(N('one') > 0, 'one');
  defer((N('three') > 0 || N('one') <= N('two') || N('seven') > 99), toDefer, 'one');

}


function two(){

  function toDeferAgain(){
    add('one', N('two'));
    add('three');
    add('seven');
  }

  again(N('two') > 0, 'two');
  defer((N('three') > 0 || N('two') <= N('one') || N('seven') > 99), toDeferAgain, 'two');
}

function three(){
  // 3 defer (5) print(N(1)+N(2));
  defer(N('five') > 0, function(){
    console.log(N('one') + N('two'));
  }, 'three');
}

function four(){
  // 4 defer (5) print("1");
  defer(N('five') > 0, function(){
    console.log('1');
  }, 'four');
}

function five(){
  // 5 4,-3,7;
  add('four');
  remove('three');
  add('seven');
}

function six(){
  // 6 defer (4) 3;
  defer(N('four') > 0, function(){
    add('three');
  }, 'six');
}

function seven(){
  // 7 7;
  add('seven');
}

function eight(){
  // 8 defer (N(7)<100) -1#N(1),-2#N(2),-7#100,-3;
  defer((N('seven') < 100 ), function(){
    remove('one', N('one'));
    remove('two', N('two'));
    remove('seven', 100);
    remove('three');
  }, 'eight');
}

function nine(){
  // 9 defer (3 || 6) 1,3;
  defer((N('three') > 0 || N('six') > 0), function(){
    add('one');
    add('three');
  }, 'nine');
}